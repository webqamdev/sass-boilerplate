// # Aspect ratio

@use "sass:math";
@use "sass:list";
@use "../functions/strip-unit" as *;
@use "../variables/misc";
@use "position/absolute" as *;

// Set the element an height based on the aspect ratio passed in arguments.
// $object-fit is used to defined the object-fit property and the width and height of the element. Set it to null to remove it.
// Usage example :
// ```scss
// @use "mixins/aspect-ratio" as *;
//
// .element {
//   @include aspect-ratio(4, 3, '.element__image', cover 100% 100%);
// }
// ```

// Please update, add or remove the styles below to match the project needs.

@mixin aspect-ratio(
  $width: 16,
  $height: 9,
  $selector: misc.$default-aspect-ratio-inner-element-selector,
  $object-fit: cover 100% 100%
) {
  $width: strip-unit($width);
  $height: strip-unit($height);

  @supports (aspect-ratio: #{$width} / #{$height}) {
    aspect-ratio: #{$width} / #{$height};
  }

  @supports not (aspect-ratio: #{$width} / #{$height}) {
    &::before {
      display: block;
      content: "";
      width: 100%;
      padding-top: math.div($height, $width) * 100%;
    }
  }

  @if $selector {
    position: relative;

    & > #{$selector} {
      @include absolute(top 0 right 0 bottom 0 left 0);

      @if $object-fit {
        @if type-of($object-fit) == "list" {
          object-fit: list.nth($object-fit, 1);
          width: list.nth($object-fit, 2);
          height: list.nth($object-fit, 3);
        } @else {
          object-fit: $object-fit;
        }
      }
    }
  }
}
