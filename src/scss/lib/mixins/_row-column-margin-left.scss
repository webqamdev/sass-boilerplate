// # Row column margin-left

@use "../variables/gap";
@use "../variables/font";
@use "../functions/px-to-em" as *;
@use "responsive-property" as *;

// Update the margin-left property based on the multiplier to create positive or negative margin for columns or rows
// along with the context breakpoints.
// Usage example :
// ```scss
// @use "mixins/row-column-margin-left" as *;
// @use "functions/px-to-em" as *;
//
// .positive-margin-left-for-tablet-and-laptop {
//   @include row-column-margin-left(
//     1,
//     null,
//     px-to-em(30px),
//     px-to-em(40px)
//   );
// }
//
// .negative-margin-left-for-mobile-and-desktop {
//   @include row-column-margin-left(
//     -1,
//     px-to-em(30px),
//     null,
//     null,
//     px-to-em(40px)
//   );
// }
// ```

// Please update, add or remove the styles below to match the project needs.

@mixin row-column-margin-left(
  $multiplier: 1,
  $left-gap-mobile: px-to-em(gap.$column-left-default-mobile),
  $left-gap-tablet: null,
  $left-gap-laptop: null,
  $left-gap-desktop: null,
  $left-gap-large-desktop: null
) {
  @include responsive-property(
    "margin-left",
    if($left-gap-mobile != null, $left-gap-mobile * $multiplier, null),
    if($left-gap-tablet != null, $left-gap-tablet * $multiplier, null),
    if($left-gap-laptop != null, $left-gap-laptop * $multiplier, null),
    if($left-gap-desktop != null, $left-gap-desktop * $multiplier, null),
    if(
      $left-gap-large-desktop != null,
      $left-gap-large-desktop * $multiplier,
      null
    )
  );
}
