// # Base column

@use "../mixins/column/column-styles" as *;
@use "../mixins/column/column-responsive-styles" as *;
@use "../variables/gap";
@use "../functions/px-to-em" as *;

// Should be used as a base to selector that looks or behave like columns in a row context.
// Usage example :
// ```scss
// @use "placeholders/base-row" as *;
// @use "placeholders/base-column" as *;
// @use "placeholders/base-column-count" as *;
//
// .row {
//   @extends %base-row--responsive-s;
//
//   .column {
//     @extends %base-column--s;
//     @extends %base-column-count--s-3;
//   }
//
//   .column-responsive {
//     @extends %base-column--responsive-s;
//     @extends %base-column-count--responsive-s-3;
//   }
// }
// ```

// -------------------------------------------------------------------- /!\
// To avoid having a very and unreadable file, the example
// with the mixins `column-count()` and `column-responsive-count()`
// are not visible here. Pleas read the `./_base-column-count.scss` file.
// -------------------------------------------------------------------- /!\

// Please update, add or remove the styles below to match the project needs.

%base-column {
  @include column-styles();
}

%base-column--responsive {
  @include column-responsive-styles();
}

// ## Small gap columns
%base-column--s {
  @include column-styles(
    px-to-em(gap.$column-top-s),
    px-to-em(gap.$column-left-s)
  );
}

%base-column--responsive-s {
  @include column-responsive-styles(
    px-to-em(gap.$column-top-s-mobile),
    px-to-em(gap.$column-left-s-mobile),
    px-to-em(gap.$column-top-s-tablet),
    px-to-em(gap.$column-left-s-tablet),
    px-to-em(gap.$column-top-s-laptop),
    px-to-em(gap.$column-left-s-laptop),
    px-to-em(gap.$column-top-s-desktop),
    px-to-em(gap.$column-left-s-desktop),
    px-to-em(gap.$column-top-s-large-desktop),
    px-to-em(gap.$column-left-s-large-desktop)
  );
}

// ## Medium gap columns
%base-column--m {
  @include column-styles(
    px-to-em(gap.$column-top-m),
    px-to-em(gap.$column-left-m)
  );
}

%base-column--responsive-m {
  @include column-responsive-styles(
    px-to-em(gap.$column-top-m-mobile),
    px-to-em(gap.$column-left-m-mobile),
    px-to-em(gap.$column-top-m-tablet),
    px-to-em(gap.$column-left-m-tablet),
    px-to-em(gap.$column-top-m-laptop),
    px-to-em(gap.$column-left-m-laptop),
    px-to-em(gap.$column-top-m-desktop),
    px-to-em(gap.$column-left-m-desktop),
    px-to-em(gap.$column-top-m-large-desktop),
    px-to-em(gap.$column-left-m-large-desktop)
  );
}

// ## Large gap columns
%base-column--l {
  @include column-styles(
    px-to-em(gap.$column-top-l),
    px-to-em(gap.$column-left-l)
  );
}

%base-column--responsive-l {
  @include column-responsive-styles(
    px-to-em(gap.$column-top-l-mobile),
    px-to-em(gap.$column-left-l-mobile),
    px-to-em(gap.$column-top-l-tablet),
    px-to-em(gap.$column-left-l-tablet),
    px-to-em(gap.$column-top-l-laptop),
    px-to-em(gap.$column-left-l-laptop),
    px-to-em(gap.$column-top-l-desktop),
    px-to-em(gap.$column-left-l-desktop),
    px-to-em(gap.$column-top-l-large-desktop),
    px-to-em(gap.$column-left-l-large-desktop)
  );
}
